buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

jar {
    baseName = 'bootlearning'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-freemarker',
            "org.springframework.boot:spring-boot-starter-web",
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.hsqldb:hsqldb:2.3.3',
            'org.springframework.boot:spring-boot-starter-mail')
    testCompile("org.springframework.boot:spring-boot-starter-test",
            'junit:junit:4.12',
            'org.mockito:mockito-all:1.10.19')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}


task buildDocker(type: Docker) {
    baseImage = 'frolvlad/alpine-oraclejdk8:slim'
    push = project.hasProperty('push')
    tag = 'ncmao/vueapp'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    exposePort(9000)
}

buildDocker.dependsOn(build)
